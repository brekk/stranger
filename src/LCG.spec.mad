import Number from "Number"
import { assertEquals, test } from "Test"

import { LCG_C, SEED_MAX, SEED_MIN } from "./Constants"
import { mkSeed, next, seedMap, unSeed } from "./LCG"
import { Seed } from "./Types"



test("mkSeed will clamp values over the max", () => assertEquals(Seed(2), mkSeed(SEED_MAX + 1)))
test(
  "mkSeed will clamp values under the min",
  () => assertEquals(Seed(SEED_MAX), mkSeed(SEED_MIN - 1)),
)
test(
  "unSeed",
  () => {
    x = 100
    return assertEquals(x, unSeed(Seed(x)))
  },
)
test("seedMap", () => assertEquals(Seed(100), seedMap((x) => x * 2, Seed(50))))
test(
  "next",
  () => {
    a = mkSeed(100)
    b = next(a)
    return assertEquals(unSeed(b), 4827100)
  },
)
